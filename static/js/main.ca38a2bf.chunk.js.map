{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/user.png","assets/images/loader.svg","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","utils/validators/helper.js","redux/users-reducer.js","common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/WithSuspense.js","App.js","index.js","common/FormsControls/FormsControls.js","common/Preloader/Preloader.js","common/FormsControls/FormsControls.module.css","common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Navbar","className","classes","nav","item","to","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toogleIsFetching","toogleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","style","disabled","some","Users","props","getUsersSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspence","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","loader","value","maxLenghthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newText","setStatus","getUserProfile","newPost","stateCopy","newPostText"],"mappings":"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","file":"static/js/main.ca38a2bf.chunk.js","sourcesContent":["import * as axios from \"axios/index\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"a40c2005-186f-44ba-a612-d775c0251dbd\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('method!')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n","\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Yo'},\r\n        {id: 2, message: 'Qu'},\r\n        {id: 3, message: 'Hi'},\r\n        {id: 4, message: 'Ey'},\r\n        {id: 5, message: 'Boo'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Artyom'},\r\n        {id: 2, name: 'Helen'},\r\n        {id: 3, name: 'Veronica'},\r\n        {id: 4, name: 'Ivan'},\r\n        {id: 5, name: 'Andrey'}\r\n    ]\r\n};\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__WQiGw\"};","module.exports = __webpack_public_path__ + \"static/media/user.91cfe391.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.acf82525.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2dAxk\",\"item\":\"Navbar_item__1lotG\",\"activeLink\":\"Navbar_activeLink__3U1qF\"};","import React from 'react';\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/validators/helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE-IS-FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE-IS-FOLLOWING-PROGRESS';\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOOGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toogleIsFetching = (isFetching) => ({type: TOOGLE_IS_FETCHING, isFetching});\r\nexport const toogleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOOGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toogleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n            dispatch(toogleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toogleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toogleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\r\n        return async (dispatch) => {\r\n            followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n        }\r\n}\r\nexport const unfollow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>NEXT</button>}\r\n    </div>\r\n}\r\nexport default Paginator;","import React from 'react';\r\nimport style from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return <div>\r\n\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                          <img src={user.photos.small != null ? user.photos.small : userPhoto} className={style.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id);\r\n                        }}>UnFollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id);\r\n                        }}>\r\n                            Follow</button>}\r\n                </div>\r\n                 </span>\r\n        <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n    </div>\r\n}\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n\r\n    return <div>\r\n       <Paginator currentPage={currentPage}\r\n                  onPageChanged={onPageChanged}\r\n                  totalItemsCount={totalUsersCount}\r\n                  pageSize={pageSize}/>\r\n        {\r\n            users.map(u => <User user={u}\r\n                                 followingInProgress={props.followingInProgress}\r\n                                 unfollow={props.unfollow}\r\n                                 follow={props.follow}\r\n                                 key={u.id}\r\n            />)\r\n        }\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getSelectUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getSelectUsers,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react'\r\nimport {\r\n    follow, getUsers, getUsersThunkCreator,\r\n    setCurrentPage,\r\n    toogleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\"\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getSelectUsers,\r\n    getTotalUsersCount, getUsersSuperSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   onPageChanged={this.onPageChanged}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   isFetching={this.props.isFetching}\r\n                   toogleFollowingProgress={this.props.toogleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toogleFollowingProgress, getUsers}),\r\n)(UsersContainer)","import React from 'react';\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img src=\"https://avatars.mds.yandex.net/get-pdb/1909671/408e1419-9d03-4b41-a3ae-dfd3a0ce762b/s1200?webp=false\"></img>\r\n            <div className={style.loginBlock}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> :\r\n                <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>);\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.payload}\r\n\r\n        default :\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n}\r\nexport const login = (email, password, rememberMe) => async(dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        }\r\n        else {\r\n            let message =  response.data.messages.length > 0 ? response.data.messages[0] : \"Some message\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            debugger;\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios/index\";\r\nimport {connect} from \"react-redux\"\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\nimport {authAPI} from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"Password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET-INITIALIZED';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_INITIALIZED:\r\n            return {...state, initialized: true}\r\n\r\n        default :\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(()=>{\r\n                dispatch(initializedSuccess());\r\n                }\r\n            );\r\n}\r\nexport default appReducer;","import {combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware  from \"redux-thunk\";\r\nimport applyMiddleware from \"redux/src/applyMiddleware\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withSuspence = (Component) => {\r\n\r\n   return (props) => {\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n           <Component {...props}/>\r\n       </React.Suspense>\r\n   }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspence} from \"./hoc/WithSuspense\";\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspence(ProfileContainer)}/>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspence(DialogsContainer)}/>\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        initialized: state.app.initialized\r\n    }\r\n)\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from './App'\r\n\r\n    ReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport style from './FormsControls.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props}/>\r\n            {text}\r\n        </div>)\r\n}","import React from 'react'\r\nimport loader from '../../assets/images/loader.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return(\r\n    <div>\r\n        <img src={loader}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3hLdn\",\"error\":\"FormsControls_error__1RhoL\",\"formSummaryError\":\"FormsControls_formSummaryError__3etfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1SSpU\",\"pageNumber\":\"Paginator_pageNumber__1YIOf\",\"selectedPage\":\"Paginator_selectedPage__2vb43\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLenghthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max len is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5F7xq\",\"loginBlock\":\"Header_loginBlock__2Xsmj\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'hello my dear', likesCount: 11},\r\n        {id: 2, message: 'its veru beautiful', likesCount: 15}\r\n\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newText,\r\n                likesCount: 0\r\n            };\r\n            let stateCopy = {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n\r\n            return stateCopy;\r\n        }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = (newText) => ({type: ADD_POST, newText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n\r\n}\r\nexport default profileReducer;"],"sourceRoot":""}