{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","src","className","s","descriptionBlock","photos","large","alt","Preloader","Post","prof","item","message","likesCount","maxLength10","maxLenghthCreator","MyPosts","React","memo","postsElements","posts","map","p","createRef","onSubmit","values","addPost","newText","AddNewPostForm","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","reduxForm","form","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a6e50ff4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3D4vu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3wJQI\",\"posts\":\"MyPosts_posts__1manL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3BWaa\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile ){\r\n        return <Preloader/>\r\n    }\r\n    return (<div>\r\n        <div>\r\n            <img src='https://www.tokkoro.com/picsup/1440721-reflection.jpg'></img>\r\n        </div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large} alt=\"\"/>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport prof from './Post.module.css'\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={prof.item}>\r\n            <img\r\n                src=\"https://images.wallpaperscraft.com/image/kitten_named_woof_cartoon_cat_drawing_63259_1920x1200.jpg\"\r\n                alt=\"\"/>\r\n            <div>\r\n                {props.message}\r\n                    Likes\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 =  maxLenghthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n        let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n        let newPostElement = React.createRef();\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newText);\r\n        };\r\n        let onPostChange = () => {\r\n            let text = newPostElement.current.value;\r\n            this.props.updateNewPostText(text);\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>My Posts</h3>\r\n                <AddNewPostForm onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n);\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name='newText' component={Textarea}\r\n                           validate={[required, maxLength10]} placeholder=\"Post message\"/>\r\n                </div>\r\n                <div>\r\n                    <button>Add Post</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\nAddNewPostForm = reduxForm({form: \"profilePost\"})(AddNewPostForm);\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newText) => {\r\n            dispatch(addPostActionCreator(newText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (<div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>);\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\"\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}