{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","prof","dialog","active","to","id","name","Message","message","maxLen50","maxLenghthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,+FCa9FC,EATI,SAACC,GAEhB,OAAQ,yBAAKC,UAAWC,IAAKC,OAAS,IAAKD,IAAKE,QACxC,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAKN,EAAMO,QCIzCC,EATC,SAACR,GAEb,OACI,yBAAKC,UAAWC,IAAKO,SAChBT,EAAMS,U,iCCEbC,EAAWC,YAAkB,IAsC7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,YAAY,qBACvDC,SAAU,CAACC,IAAUZ,MAEhC,6BACI,6CAODa,EAtCC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAzB,GAAM,OAAI,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMsB,IAAK1B,EAAOG,GAAIA,GAAIH,EAAOG,QACxGwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE1B,QAC9DkB,EAAMS,eAK3B,OACI,yBAAKhC,UAAWC,IAAKyB,SACjB,yBAAK1B,UAAWC,IAAKgC,cAChBR,GAEL,yBAAKzB,UAAWC,IAAK6B,UACjB,6BAAMD,IAEV,kBAAClB,EAAD,CAAqBG,SAXT,SAACoB,GACjBnC,EAAMoC,YAAYD,EAAOF,qB,wDCd7BI,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,S,OCkBRE,sBACXC,aAfkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACiB,GACtB,MAAO,CACHN,YAAa,SAACH,GACVS,EAASC,YAAmBV,UDTR,SAACW,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAK9C,MAAMsC,OACT,kBAACM,EAAcE,KAAK9C,OADI,kBAAC,IAAD,CAAUK,GAAG,eAJT,GAEX0C,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCM9DL,CAGbjB","file":"static/js/4.f16b2b42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3YoHM\",\"dialogsItems\":\"Dialogs_dialogsItems__1uo_g\",\"messages\":\"Dialogs_messages__v6qCm\"};","import React from 'react';\r\nimport prof from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (<div className={prof.dialog + ' ' +prof.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport prof from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return(\r\n        <div className={prof.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport prof from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLenghthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLen50 = maxLenghthCreator(50)\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    return (\r\n        <div className={prof.dialogs}>\r\n            <div className={prof.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={prof.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newMessageBody' placeholder='Enter your message'\r\n                       validate={[required, maxLen50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\nexport default Dialogs;\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}